{"ast":null,"code":"import { combineReducers } from '@reduxjs/toolkit';\nimport { applyMiddleware, createStore } from 'redux';\nimport { cartReducer } from './cart-redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport { mealReducer } from './GetMealsResponses';\nimport { rootSaga } from '../store/saga/RootSaga';\nimport { orderReducer } from './SendOrderResponses';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware]; // const persistConfig = {\n//     key: 'root',\n//     storage,\n//     whitelist: ['auth', 'user']\n// }\n\nconst reducer = combineReducers({\n  cart: cartReducer,\n  meals: mealReducer,\n  orders: orderReducer\n}); // const persistedReducer = persistReducer(persistConfig, reducer)\n// sagaMiddleware.run(rootSaga)\n\nexport const store = createStore(reducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga); // export const persistor = persistStore(store)\n//export const store = createStore(reducer)","map":{"version":3,"sources":["D:/React Learning/reactLearning/react-food-order-app/react-food-order-app/src/store/ReduxStore.js"],"names":["combineReducers","applyMiddleware","createStore","cartReducer","createSagaMiddleware","mealReducer","rootSaga","orderReducer","sagaMiddleware","middlewares","reducer","cart","meals","orders","store","run"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAME,OAAO,GAAGV,eAAe,CAAC;AAC5BW,EAAAA,IAAI,EAAER,WADsB;AAE5BS,EAAAA,KAAK,EAAEP,WAFqB;AAG5BQ,EAAAA,MAAM,EAAEN;AAHoB,CAAD,CAA/B,C,CAMA;AAEA;;AAEA,OAAO,MAAMO,KAAK,GAAGZ,WAAW,CAACQ,OAAD,EAAUT,eAAe,CAAC,GAAGQ,WAAJ,CAAzB,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBT,QAAnB,E,CAEA;AAEA","sourcesContent":["import { combineReducers } from '@reduxjs/toolkit';\r\nimport { applyMiddleware, createStore } from 'redux'\r\nimport { cartReducer } from './cart-redux';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { mealReducer } from './GetMealsResponses'\r\nimport { rootSaga } from '../store/saga/RootSaga'\r\nimport { orderReducer } from './SendOrderResponses';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware]\r\n\r\n// const persistConfig = {\r\n//     key: 'root',\r\n//     storage,\r\n//     whitelist: ['auth', 'user']\r\n// }\r\n\r\nconst reducer = combineReducers({\r\n    cart: cartReducer,\r\n    meals: mealReducer,\r\n    orders: orderReducer\r\n});\r\n\r\n// const persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\n// sagaMiddleware.run(rootSaga)\r\n\r\nexport const store = createStore(reducer, applyMiddleware(...middlewares))\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\n// export const persistor = persistStore(store)\r\n\r\n//export const store = createStore(reducer)"]},"metadata":{},"sourceType":"module"}