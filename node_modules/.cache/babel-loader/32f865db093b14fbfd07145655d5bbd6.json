{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Learning\\\\reactLearning\\\\react-food-order-app\\\\react-food-order-app\\\\src\\\\store\\\\Cartprovider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartReducer = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, actions) => {\n  if (actions.type === 'ADD') {\n    const existingCartItemIndex = state.item.findIndex(item => item.id === actions.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedItems = state.items.concat(actions.item);\n    const updatedTotalAmount = state.totalAmount + actions.item.price * actions.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (actions.type === 'REMOVE') {\n    state = actions.id;\n  }\n\n  return defaultCartReducer;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartReducer);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"/9vMKutDKS5RGNNTdiU2qBsqrAw=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/React Learning/reactLearning/react-food-order-app/react-food-order-app/src/store/Cartprovider.js"],"names":["useReducer","CartContext","defaultCartReducer","items","totalAmount","cartReducer","state","actions","type","existingCartItemIndex","item","findIndex","id","existingCartItem","updatedItems","concat","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AACA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAA3B;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAEpC,MAAIA,OAAO,CAACC,IAAR,KAAiB,KAArB,EAA4B;AACxB,UAAMC,qBAAqB,GAAGH,KAAK,CAACI,IAAN,CAAWC,SAAX,CAAqBD,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYL,OAAO,CAACG,IAAR,CAAaE,EAAtD,CAA9B;AAEA,UAAMC,gBAAgB,GAAGP,KAAK,CAACH,KAAN,CAAYM,qBAAZ,CAAzB;AAEA,UAAMK,YAAY,GAAGR,KAAK,CAACH,KAAN,CAAYY,MAAZ,CAAmBR,OAAO,CAACG,IAA3B,CAArB;AACA,UAAMM,kBAAkB,GAAGV,KAAK,CAACF,WAAN,GAAoBG,OAAO,CAACG,IAAR,CAAaO,KAAb,GAAqBV,OAAO,CAACG,IAAR,CAAaQ,MAAjF;AACA,WAAO;AACHf,MAAAA,KAAK,EAAEW,YADJ;AAEHV,MAAAA,WAAW,EAAEY;AAFV,KAAP;AAKH;;AACD,MAAIT,OAAO,CAACC,IAAR,KAAiB,QAArB,EAA+B;AAAEF,IAAAA,KAAK,GAAGC,OAAO,CAACK,EAAhB;AAAoB;;AACrD,SAAOV,kBAAP;AACH,CAjBD;;AAkBA,MAAMiB,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCtB,UAAU,CAACK,WAAD,EAAcH,kBAAd,CAAlD;;AAGA,QAAMqB,oBAAoB,GAAGb,IAAI,IAAI;AACjCY,IAAAA,kBAAkB,CAAC;AAAEd,MAAAA,IAAI,EAAE,KAAR;AAAeE,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMc,yBAAyB,GAAGZ,EAAE,IAAI;AACpCU,IAAAA,kBAAkB,CAAC;AAAEd,MAAAA,IAAI,EAAE,QAAR;AAAkBI,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMa,WAAW,GAAG;AAChBtB,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KADD;AAEhBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAFP;AAGhBsB,IAAAA,OAAO,EAAEH,oBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAUA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACFL,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CA1BD;;GAAMT,Y;;KAAAA,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\"\r\nimport CartContext from \"./cart-context\"\r\nconst defaultCartReducer = {\r\n    items: [],\r\n    totalAmount: 0\r\n}\r\n\r\nconst cartReducer = (state, actions) => {\r\n\r\n    if (actions.type === 'ADD') {\r\n        const existingCartItemIndex = state.item.findIndex(item => item.id === actions.item.id)\r\n\r\n        const existingCartItem = state.items[existingCartItemIndex]\r\n\r\n        const updatedItems = state.items.concat(actions.item)\r\n        const updatedTotalAmount = state.totalAmount + actions.item.price * actions.item.amount\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        }\r\n\r\n    }\r\n    if (actions.type === 'REMOVE') { state = actions.id }\r\n    return defaultCartReducer\r\n}\r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartReducer);\r\n\r\n\r\n    const addItemToCartHandler = item => {\r\n        dispatchCartAction({ type: 'ADD', item: item })\r\n    }\r\n\r\n    const removeItemFromCartHandler = id => {\r\n        dispatchCartAction({ type: 'REMOVE', id: id })\r\n    }\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler\r\n\r\n    }\r\n\r\n\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n\r\n}\r\n\r\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}