{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Learning\\\\reactLearning\\\\react-food-order-app\\\\react-food-order-app\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { mealActions } from '../../store/GetMealsResponses';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  // const [meals, setMeals] = useState([]);\n  // const [isLoading, setIsLoading] = useState(true);\n  // const [httpError, setHttpError] = useState();\n  const {\n    meals,\n    isLoading,\n    httpError\n  } = useSelector(state => state.meals);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(mealActions.getMeal()); // const fetchMeals = async () => {\n    //   const response = await fetch(\n    //     'https://react-http-59055-default-rtdb.firebaseio.com/meals.json'\n    //   );\n    //   if (!response.ok) {\n    //     throw new Error('Something went wrong!');\n    //   }\n    //   const responseData = await response.json();\n    //   const loadedMeals = [];\n    //   for (const key in responseData) {\n    //     loadedMeals.push({\n    //       id: key,\n    //       name: responseData[key].name,\n    //       description: responseData[key].description,\n    //       price: responseData[key].price,\n    //     });\n    //   }\n    //   setMeals(loadedMeals);\n    //   setIsLoading(false);\n    // };\n    // fetchMeals().catch((error) => {\n    //   setIsLoading(false);\n    //   setHttpError(error.message);\n    // });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"bxpkIbWvKGH9ZSL9z9wsp4mW9DQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/React Learning/reactLearning/react-food-order-app/react-food-order-app/src/components/Meals/AvailableMeals.js"],"names":["useEffect","useState","Card","MealItem","classes","useSelector","useDispatch","mealActions","AvailableMeals","meals","isLoading","httpError","state","dispatch","getMeal","MealsLoading","MealsError","mealsList","map","meal","id","name","description","price"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,+BAA5B;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B;AACA;AACA;AAEA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,MAAkCN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACH,KAAhB,CAAnD;AACA,QAAMI,QAAQ,GAAGP,WAAW,EAA5B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACN,WAAW,CAACO,OAAZ,EAAD,CAAR,CADc,CAEd;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD,GAhCQ,EAgCN,EAhCM,CAAT;;AAkCA,MAAIJ,SAAJ,EAAe;AACb,wBACE;AAAS,MAAA,SAAS,EAAEN,OAAO,CAACW,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIJ,SAAJ,EAAe;AACb,wBACE;AAAS,MAAA,SAAS,EAAEP,OAAO,CAACY,UAA5B;AAAA,6BACE;AAAA,kBAAIL;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAMM,SAAS,GAAGR,KAAK,CAACS,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACC,EAFX;AAGE,IAAA,IAAI,EAAED,IAAI,CAACE,IAHb;AAIE,IAAA,WAAW,EAAEF,IAAI,CAACG,WAJpB;AAKE,IAAA,KAAK,EAAEH,IAAI,CAACI;AALd,KACOJ,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEhB,OAAO,CAACK,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKQ;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3ED;;GAAMT,c;UAKoCH,W,EACvBC,W;;;KANbE,c;AA6EN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { mealActions } from '../../store/GetMealsResponses'\n\nconst AvailableMeals = () => {\n  // const [meals, setMeals] = useState([]);\n  // const [isLoading, setIsLoading] = useState(true);\n  // const [httpError, setHttpError] = useState();\n\n  const { meals, isLoading, httpError } = useSelector(state => state.meals)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(mealActions.getMeal())\n    // const fetchMeals = async () => {\n    //   const response = await fetch(\n    //     'https://react-http-59055-default-rtdb.firebaseio.com/meals.json'\n    //   );\n\n    //   if (!response.ok) {\n    //     throw new Error('Something went wrong!');\n    //   }\n\n    //   const responseData = await response.json();\n\n    //   const loadedMeals = [];\n\n    //   for (const key in responseData) {\n    //     loadedMeals.push({\n    //       id: key,\n    //       name: responseData[key].name,\n    //       description: responseData[key].description,\n    //       price: responseData[key].price,\n    //     });\n    //   }\n\n    //   setMeals(loadedMeals);\n    //   setIsLoading(false);\n    // };\n\n    // fetchMeals().catch((error) => {\n    //   setIsLoading(false);\n    //   setHttpError(error.message);\n    // });\n  }, []);\n\n  if (isLoading) {\n    return (\n      <section className={classes.MealsLoading}>\n        <p>Loading...</p>\n      </section>\n    );\n  }\n\n  if (httpError) {\n    return (\n      <section className={classes.MealsError}>\n        <p>{httpError}</p>\n      </section>\n    );\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}