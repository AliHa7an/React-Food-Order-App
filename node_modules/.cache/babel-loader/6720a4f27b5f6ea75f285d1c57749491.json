{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Learning\\\\reactLearning\\\\react-food-order-app\\\\react-food-order-app\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    mode: 'onChange'\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = data => {\n    if (!isValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: data.name,\n      street: data.street,\n      city: data.city,\n      postalCode: data.postalCode\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${!errors.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${!errors.street ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${!errors.postalCode ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${!errors.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit(confirmHandler),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef,\n        ...register(\"name\", {\n          minLength: {\n            value: 3,\n            message: 'Please enter a valid username!'\n          },\n          required: 'Name is required!'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.name.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef,\n        ...register(\"street\", {\n          minLength: {\n            value: 3,\n            message: 'Please enter a valid street!'\n          },\n          required: 'Street is required!'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), errors.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.street.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef,\n        ...register(\"postalCode\", {\n          minLength: {\n            value: 5,\n            message: 'Please enter a valid postal code (5 characters long)!'\n          },\n          maxLength: {\n            value: 5,\n            message: 'Please enter a valid postal code (5 characters long)!'\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), errors.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.postalCode.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef,\n        ...register(\"city\", {\n          required: 'Please enter your city name!'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), errors.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.city.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        disabled: !isValid,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"TymGxV7qkOpK4QibTgAmDc2XaXQ=\", false, function () {\n  return [useForm];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["D:/React Learning/reactLearning/react-food-order-app/react-food-order-app/src/components/Cart/Checkout.js"],"names":["useRef","useForm","classes","Checkout","props","register","handleSubmit","formState","errors","isValid","mode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","data","onConfirm","name","street","city","postalCode","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","minLength","value","message","required","maxLength","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport classes from './Checkout.module.css';\n\n\n\nconst Checkout = (props) => {\n  const { register, handleSubmit, formState: { errors, isValid } } = useForm({ mode: 'onChange' });\n\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (data) => {\n    if (!isValid) {\n      return;\n    }\n\n\n    props.onConfirm({\n      name: data.name,\n      street: data.street,\n      city: data.city,\n      postalCode: data.postalCode\n    });\n\n  };\n\n  const nameControlClasses = `${classes.control} ${!errors.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${!errors.street ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${!errors.postalCode ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${!errors.city ? '' : classes.invalid}`;\n\n  return (\n    <form className={classes.form} onSubmit={handleSubmit(confirmHandler)}>\n      <div className={nameControlClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' ref={nameInputRef} {...register(\"name\", { minLength: { value: 3, message: 'Please enter a valid username!' }, required: 'Name is required!' })} />\n        {errors.name && <p>{errors.name.message}</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor='street'>Street</label>\n        <input type='text' id='street' ref={streetInputRef} {...register(\"street\", { minLength: { value: 3, message: 'Please enter a valid street!' }, required: 'Street is required!' })} />\n        {errors.street && <p>{errors.street.message}</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalCodeInputRef}  {...register(\"postalCode\", { minLength: { value: 5, message: 'Please enter a valid postal code (5 characters long)!' }, maxLength: { value: 5, message: 'Please enter a valid postal code (5 characters long)!' } })} />\n        {errors.postalCode && <p>{errors.postalCode.message}</p>}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef}  {...register(\"city\", { required: 'Please enter your city name!' })} />\n        {errors.city && <p>{errors.city.message}</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit} disabled={!isValid}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}