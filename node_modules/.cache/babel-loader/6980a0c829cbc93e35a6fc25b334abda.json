{"ast":null,"code":"import { combineReducers } from '@reduxjs/toolkit';\nimport createSagaMiddleware from \"redux-saga\";\nimport { applyMiddleware, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { cartReducer } from './cart-redux'; // const sagaMiddleware = createSagaMiddleware();\n// const middlewares = [sagaMiddleware]\n// const persistConfig = {\n//     key: 'root',\n//     storage,\n//     whitelist: ['auth', 'user']\n// }\n\nconst reducer = combineReducers({\n  cart: cartReducer\n}); // const persistedReducer = persistReducer(persistConfig, reducer)\n// export const store = createStore(persistedReducer, applyMiddleware(...middlewares))\n// sagaMiddleware.run(rootSaga)\n// export const persistor = persistStore(store)\n\nexport const store = createStore(reducer);","map":{"version":3,"sources":["D:/React Learning/reactLearning/react-food-order-app/react-food-order-app/src/store/ReduxStore.js"],"names":["combineReducers","createSagaMiddleware","applyMiddleware","createStore","persistStore","persistReducer","storage","cartReducer","reducer","cart","store"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,WAAT,QAA4B,cAA5B,C,CAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC5BS,EAAAA,IAAI,EAAEF;AADsB,CAAD,CAA/B,C,CAIA;AAEA;AAEA;AAEA;;AAEA,OAAO,MAAMG,KAAK,GAAGP,WAAW,CAACK,OAAD,CAAzB","sourcesContent":["import { combineReducers } from '@reduxjs/toolkit';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { applyMiddleware, createStore } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { cartReducer } from './cart-redux';\r\n\r\n\r\n// const sagaMiddleware = createSagaMiddleware();\r\n\r\n// const middlewares = [sagaMiddleware]\r\n\r\n// const persistConfig = {\r\n//     key: 'root',\r\n//     storage,\r\n//     whitelist: ['auth', 'user']\r\n// }\r\n\r\nconst reducer = combineReducers({\r\n    cart: cartReducer,\r\n});\r\n\r\n// const persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\n// export const store = createStore(persistedReducer, applyMiddleware(...middlewares))\r\n\r\n// sagaMiddleware.run(rootSaga)\r\n\r\n// export const persistor = persistStore(store)\r\n\r\nexport const store = createStore(reducer)"]},"metadata":{},"sourceType":"module"}