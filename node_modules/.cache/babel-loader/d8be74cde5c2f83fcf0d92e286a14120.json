{"ast":null,"code":"import { combineReducers } from '@reduxjs/toolkit';\nimport { applyMiddleware, createStore } from 'redux';\nimport { cartReducer } from './cart-redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport { mealReducer } from './GetMealsResponses';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware]; // const persistConfig = {\n//     key: 'root',\n//     storage,\n//     whitelist: ['auth', 'user']\n// }\n\nconst reducer = combineReducers({\n  cart: cartReducer,\n  meals: mealReducer\n}); // const persistedReducer = persistReducer(persistConfig, reducer)\n\nexport const store = createStore(reducer, applyMiddleware(...middlewares)); // sagaMiddleware.run(rootSaga)\n// export const persistor = persistStore(store)\n//export const store = createStore(reducer)","map":{"version":3,"sources":["D:/React Learning/reactLearning/react-food-order-app/react-food-order-app/src/store/ReduxStore.js"],"names":["combineReducers","applyMiddleware","createStore","cartReducer","createSagaMiddleware","mealReducer","sagaMiddleware","middlewares","reducer","cart","meals","store"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAME,OAAO,GAAGR,eAAe,CAAC;AAC5BS,EAAAA,IAAI,EAAEN,WADsB;AAE5BO,EAAAA,KAAK,EAAEL;AAFqB,CAAD,CAA/B,C,CAKA;;AAEA,OAAO,MAAMM,KAAK,GAAGT,WAAW,CAACM,OAAD,EAAUP,eAAe,CAAC,GAAGM,WAAJ,CAAzB,CAAzB,C,CAEP;AAEA;AAEA","sourcesContent":["import { combineReducers } from '@reduxjs/toolkit';\r\nimport { applyMiddleware, createStore } from 'redux'\r\nimport { cartReducer } from './cart-redux';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { mealReducer } from './GetMealsResponses'\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware]\r\n\r\n// const persistConfig = {\r\n//     key: 'root',\r\n//     storage,\r\n//     whitelist: ['auth', 'user']\r\n// }\r\n\r\nconst reducer = combineReducers({\r\n    cart: cartReducer,\r\n    meals: mealReducer\r\n});\r\n\r\n// const persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\nexport const store = createStore(reducer, applyMiddleware(...middlewares))\r\n\r\n// sagaMiddleware.run(rootSaga)\r\n\r\n// export const persistor = persistStore(store)\r\n\r\n//export const store = createStore(reducer)"]},"metadata":{},"sourceType":"module"}